{"remainingRequest":"C:\\Users\\HP\\Desktop\\系统\\fontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\系统\\fontend\\src\\views\\index\\components\\Main.vue?vue&type=style&index=2&id=15bfa46a&lang=scss","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\系统\\fontend\\src\\views\\index\\components\\Main.vue","mtime":1746971736000},{"path":"C:\\Users\\HP\\Desktop\\系统\\fontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Desktop\\系统\\fontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Desktop\\系统\\fontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Desktop\\系统\\fontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Desktop\\系统\\fontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Desktop\\系统\\fontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tYXJrZG93bi1ib2R5IHsKICBkaXNwbGF5OiBibG9jazsKICB3aWR0aDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICBmb250LXNpemU6IDE0cHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKCiAgcCB7CiAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7CiAgfQoKICBvbCB7CiAgICBsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWw7CiAgfQoKICB1bCB7CiAgICBsaXN0LXN0eWxlLXR5cGU6IGRpc2M7CiAgfQoKICBwcmUgY29kZSwKICBwcmUgdHQgewogICAgbGluZS1oZWlnaHQ6IDEuNjsKICAgIGZvbnQtc2l6ZTogMTZweDsKICB9CgogIC5oaWdobGlnaHQgcHJlLAogIHByZSB7CiAgICAvL2JhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRlZmYyOwogICAgbWFyZ2luLXRvcDogMTZweDsKICB9CgogIGNvZGUuaGxqcyB7CiAgICBwYWRkaW5nOiAwOwogIH0KCiAgLmNvZGUtYmxvY2sgewogICAgJi13cmFwcGVyIHsKICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICBwYWRkaW5nLXRvcDogMjRweDsKICAgIH0KCiAgICAmLWhlYWRlciB7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgdG9wOiA1cHg7CiAgICAgIHJpZ2h0OiAwOwogICAgICB3aWR0aDogMTAwJTsKICAgICAgcGFkZGluZzogMCAxcmVtOwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBjb2xvcjogI2IzYjNiMzsKCiAgICAgICZfX2NvcHkgewogICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgICBtYXJnaW4tbGVmdDogMC41cmVtOwogICAgICAgIHVzZXItc2VsZWN0OiBub25lOwoKICAgICAgICAmOmhvdmVyIHsKICAgICAgICAgIGNvbG9yOiAjNjVhNjY1OwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KCiAgLmNvZGUtYmxvY2std3JhcHBlciB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHdpZHRoOiAxMDAlOwogIH0KfQoKaHRtbC5kYXJrIHsKICAubWVzc2FnZS1yZXBseSB7CiAgICAud2hpdGVzcGFjZS1wcmUtd3JhcCB7CiAgICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsKICAgICAgY29sb3I6IHZhcigtLW4tdGV4dC1jb2xvcik7CiAgICB9CiAgfQoKICAuaGlnaGxpZ2h0IHByZSwKICBwcmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzI4MmMzNDsKICB9Cn0K"},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6eA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/views/index/components","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div v-if=\"lists && lists.length > 0\" class=\"box-msg-list\">\n      <el-scrollbar ref=\"msglist\" wrap-class=\"scrollbar-wrapper\">\n        <div class=\"list\">\n          <div v-for=\"(item, index) in lists\" class=\"row\"\n               :style=\"'background:' + (item.user === 'AI'? '#f7f7f8':'#fff') + ';'\">\n            <div v-if=\"item.user === 'AI'\" class=\"message\">\n              <div class=\"avatar\">\n                <img src=\"/static/img/ai.svg\">\n              </div>\n              <div class=\"text markdown-body\">\n                <textComponent\n                  :text=\"item.message\"\n                ></textComponent>\n                <div>\n                  <span\n                    v-clipboard:copy='textFormat(item.message)'\n                    v-clipboard:success=\"onCopySuccess\"\n                    v-clipboard:error=\"onCopyError\"\n                    class=\"copy text-primary\"\n                  >复制内容</span>\n                </div>\n              </div>\n            </div>\n            <div v-else class=\"message\">\n              <div class=\"avatar\" style=\"background: #ffffff;\">\n                <img :src=\"avatar || '/static/img/avatar.png'\">\n              </div>\n              <!--              <div class=\"text\" v-html=\"item.message\" />-->\n              <div class=\"text markdown-body\">\n                <textComponent\n                  :text=\"item.message\"\n                ></textComponent>\n              </div>\n            </div>\n          </div>\n          <div v-if=\"writing\" style=\"background: #f7f7f8;\">\n            <div class=\"message\">\n              <div class=\"avatar\"><img src=\"/static/img/ai.svg\"></div>\n              <div class=\"text markdown-body\">\n                <!--                  <span v-html=\"writingText\"></span>-->\n                <textComponent\n                  :text=\"writingText\"\n                ></textComponent>\n                <span class=\"cursor\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </el-scrollbar>\n    </div>\n\n    <welcome\n      v-else\n      :page-title=\"page_title\"\n      @use=\"quickMessage\"\n    ></welcome>\n\n    <div class=\"box-input\">\n      <div class=\"input\">\n        <el-input\n          v-model=\"message\"\n          placeholder=\"输入你的问题（Shift + Enter = 换行）\"\n          @keyup.enter.native=\"onEnter\"\n          type=\"textarea\"\n          :autosize=\"{ minRows: 1, maxRows: 8}\"\n          maxlength=\"3000\"\n        />\n        <el-button\n          class=\"btn-send\"\n          type=\"default\"\n          :loading=\"writing\"\n          icon=\"el-icon-position\"\n          @click=\"sendText\"\n        />\n      </div>\n      <div class=\"copyright\">\n        <div v-if=\"copyright\">\n          <a v-if=\"copyright_link\" :href=\"copyright_link\" target=\"_blank\">{{ copyright }}</a>\n          <span v-else>{{ copyright }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapGetters} from \"vuex\";\nimport {getHistoryMsg, saveAIMessage} from \"@/api/chat\";\nimport {getToken, getSiteCode} from \"@/utils/auth\";\nimport TextComponent from \"./Text\";\nimport Welcome from \"./Welcome\";\nimport {saveGroup} from '@/api/group'\n\nimport \"katex/dist/katex.min.css\";\nimport \"@/styles/lib/tailwind.css\";\nimport \"@/styles/lib/highlight.scss\";\nimport \"@/styles/lib/github-markdown.scss\";\n\nexport default {\n  name: \"Main\",\n  components: {TextComponent, Welcome},\n  data() {\n    return {\n      group_id: 0,\n      lists: [],\n      message: \"\",\n      writingText: \"\",\n      writing: false,\n      page: 1,\n      pagesize: 1000,\n    };\n  },\n  computed: {\n    ...mapGetters([\n      \"avatar\",\n      \"nickname\",\n      \"page_title\",\n      \"copyright\",\n      \"copyright_link\",\n    ]),\n  },\n  methods: {\n    async sendText() {\n      if (this.writing) {\n        return;\n      }\n\n      if (this.group_id === 0) {\n        await this.createGroup();\n        if (this.group_id === 0) {\n          return;\n        }\n        if (this.group_id === -1) {\n          this.group_id = 0\n          this.$message.error('创建会话出错，请登录。');\n          return;\n        }\n      }\n\n      const message = this.trim(this.message);\n      if (!message) {\n        this.$message.error(\"请输入你的问题\");\n        this.message = \"\";\n        return;\n      }\n      this.lists.push({\n        user: \"我\",\n        message: message,\n      });\n      this.message = \"\";\n      this.writing = true;\n      this.scrollBottom();\n\n      const headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      headers.append(\"X-token\", getToken());\n      const url = process.env.VUE_APP_BASE_API + \"/chat/sendText\";\n      const data = {\n        group_id: this.group_id,\n        message: message,\n      };\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        this.writing = false;\n        this.$message.error(response.statusText);\n        return;\n      }\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder(\"utf-8\");\n      let done = false;\n      let curAiMsg = \"\";\n      while (!done) {\n        this.scrollBottom();\n        const {value, done: readerDone} = await reader.read();\n        if (value) {\n          let char = decoder.decode(value);\n          if (char === \"\\n\" && curAiMsg.endsWith(\"\\n\")) {\n            continue;\n          }\n          if (char) {\n            if (char.indexOf(\"[error]\") !== -1) {\n              this.writing = false;\n              this.writingText = \"\";\n              this.lists.pop();\n              const error = char.replace(\"[error]\", \"\");\n              if (error.indexOf(\"请登录\") !== -1) {\n                this.$emit(\"showlogin\");\n                setTimeout(() => {\n                  this.$message.error(error);\n                }, 500);\n              } else if (error.indexOf(\"请充值\") !== -1) {\n                this.$emit(\"showUserInfo\");\n                setTimeout(() => {\n                  this.$message.error(error);\n                }, 500);\n              } else {\n                this.$alert(error, \"系统提示\");\n              }\n              break;\n            }\n            // char = char.replaceAll(\"\\n\", \"<br>\");\n            this.writing = true;\n            this.writingText += char;\n          }\n        }\n        done = readerDone;\n      }\n      if (this.writingText) {\n        this.lists.push({\n          user: \"AI\",\n          message: this.writingText,\n        });\n\n        saveAIMessage({\n          group_id: this.group_id,\n          message: this.writingText\n        })\n      }\n\n      this.writing = false;\n      this.writingText = \"\";\n      this.scrollBottom();\n    },\n    async createGroup() {\n      try {\n        const res = await saveGroup({title: '新的会话'});\n        if (!res.errno) {\n          this.group_id = res.group_id;\n          this.$emit('groupCreated');\n        } else {\n          this.$message.error(res.message || '创建会话失败');\n        }\n      } catch (error) {\n        console.error('创建会话出错:', error);\n        if (error.errno === 403) {\n          this.group_id = -1;\n          this.$emit(\"showlogin\");\n        } else {\n          this.$message.error('创建会话出错，请稍后再试');\n        }\n      }\n    },\n    setGroupId(group_id) {\n      this.group_id = group_id;\n      this.page = 1;\n      this.getHistoryMsg();\n    },\n    getHistoryMsg() {\n      getHistoryMsg({\n        group_id: this.group_id,\n        page: this.page,\n        pagesize: this.pagesize,\n      }).then((res) => {\n        this.lists = res.data.list;\n        this.$nextTick(() => {\n          this.scrollBottom();\n        });\n      });\n    },\n    quickMessage(text) {\n      this.message = text;\n    },\n    onCopySuccess() {\n      this.$message.success(\"已复制\");\n    },\n    onCopyError() {\n      this.$message.error(\"复制失败\");\n    },\n    onEnter(e) {\n      if (!e.shiftKey) {\n        this.sendText();\n      }\n    },\n    trim(str) {\n      if (str) {\n        str = str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n      }\n      return str;\n    },\n    textFormat(str) {\n      str = this.trim(str);\n      if (str && typeof str.replaceAll == \"function\") {\n        str = str.replaceAll(\"<br>\", \"\\n\").replaceAll(\"&nbsp\", \" \");\n      }\n      return str;\n    },\n    scrollBottom() {\n      this.$nextTick(() => {\n        const container = this.$refs[\"msglist\"].wrap;\n        container.scrollTop = container.scrollHeight;\n      });\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.app-main {\n  /*50 = navbar  */\n  min-height: calc(100vh - 50px);\n  /*min-height: 100vh;*/\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n  background: #f3f6f9;\n}\n\n.fixed-header + .app-main {\n  padding-top: 50px;\n}\n\n.wrapper {\n  display: flex;\n  flex-direction: column;\n}\n\n.box-msg-list {\n  width: 100%;\n  position: absolute;\n  top: 50px;\n  bottom: 140px;\n  left: 0;\n  right: 0;\n  box-sizing: border-box;\n\n  .el-scrollbar {\n    height: 100%;\n    overflow-x: hidden;\n  }\n}\n\n.list {\n  width: 100%;\n  height: auto;\n\n  .row {\n    width: 100%;\n    border-bottom: 1px solid #ddd;\n  }\n}\n\n.message {\n  width: 90%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: flex-start;\n  padding: 20px 20px;\n  box-sizing: border-box;\n  max-width: 100%;\n\n  &:last-child {\n    border-bottom: 0;\n  }\n\n  .text {\n    color: #343541;\n    line-height: 26px;\n    font-size: 16px;\n    word-break: break-all;\n    padding: 4px 0;\n    overflow: hidden;\n    width: 100%;\n    box-sizing: border-box;\n    display: inline;\n\n    span {\n      display: inline;\n    }\n  }\n\n  .copy {\n    width: 80px;\n    height: 36px;\n    cursor: pointer;\n    font-size: 14px;\n  }\n\n  .avatar {\n    width: 30px;\n    height: 30px;\n    min-width: 30px;\n    background: #F7F7F8;\n    color: #fff;\n    font-size: 14px;\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 3px;\n    margin-right: 20px;\n    overflow: hidden;\n\n    img {\n      width: 30px;\n      height: 30px;\n    }\n  }\n\n  .cursor {\n    background: #3d3d3d;\n    line-height: 100%;\n    border-left: 0.1em solid transparent;\n    animation: cursor 0.6s infinite;\n    display: inline-block;\n    width: 5px;\n    height: 20px;\n    margin-top: 3px;\n  }\n\n  /* Animation */\n  @keyframes cursor {\n    50% {\n      background: white;\n    }\n  }\n}\n\n.box-input {\n  width: 100%;\n  background: #fff;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  padding: 2vh 0 0 22vh;\n  box-sizing: border-box;\n  transition: padding-left 0.28s;\n\n  .input {\n    width: 768px;\n    margin: 0 auto;\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\n    border-radius: 10px;\n    position: relative;\n    max-width: 100%;\n\n    .btn-send {\n      position: absolute;\n      right: 1px;\n      bottom: 1px;\n      border: none;\n      height: 40px;\n    }\n  }\n\n  .copyright {\n    width: 768px;\n    margin: 15px auto 20px auto;\n    font-size: 13px;\n    color: #999;\n    text-align: center;\n    letter-spacing: 1px;\n    max-width: 100%;\n    line-height: 18px;\n  }\n}\n\n.mobile {\n  width: 100% !important;\n\n  .box-input {\n    max-width: 100%;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.scrollbar-wrapper {\n  height: 100%;\n  overflow-x: hidden;\n}\n\n// fix css style bug in open el-dialog\n.el-popup-parent--hidden {\n  .fixed-header {\n    padding-right: 15px;\n  }\n}\n\n.input .el-textarea__inner {\n  padding: 10px 60px 10px 15px;\n  letter-spacing: 1px;\n}\n</style>\n\n<style lang=\"scss\">\n.markdown-body {\n  display: block;\n  width: 100%;\n  background-color: transparent;\n  font-size: 14px;\n  box-sizing: border-box;\n\n  p {\n    white-space: pre-wrap;\n  }\n\n  ol {\n    list-style-type: decimal;\n  }\n\n  ul {\n    list-style-type: disc;\n  }\n\n  pre code,\n  pre tt {\n    line-height: 1.6;\n    font-size: 16px;\n  }\n\n  .highlight pre,\n  pre {\n    //background-color: #fff;\n    background-color: #edeff2;\n    margin-top: 16px;\n  }\n\n  code.hljs {\n    padding: 0;\n  }\n\n  .code-block {\n    &-wrapper {\n      position: relative;\n      padding-top: 24px;\n    }\n\n    &-header {\n      position: absolute;\n      top: 5px;\n      right: 0;\n      width: 100%;\n      padding: 0 1rem;\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      color: #b3b3b3;\n\n      &__copy {\n        cursor: pointer;\n        margin-left: 0.5rem;\n        user-select: none;\n\n        &:hover {\n          color: #65a665;\n        }\n      }\n    }\n  }\n\n  .code-block-wrapper {\n    display: block;\n    width: 100%;\n  }\n}\n\nhtml.dark {\n  .message-reply {\n    .whitespace-pre-wrap {\n      white-space: pre-wrap;\n      color: var(--n-text-color);\n    }\n  }\n\n  .highlight pre,\n  pre {\n    background-color: #282c34;\n  }\n}\n</style>\n"]}]}